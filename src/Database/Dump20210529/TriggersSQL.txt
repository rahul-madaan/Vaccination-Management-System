/*trigger for age entry automatic*/
delimiter //
Create TRIGGER AgeEntry_insert
    Before INSERT
    on members for each row
    BEGIN
        set NEW.age = YEAR(CURDATE()) - YEAR(NEW.DOB);
	END; //

delimiter //
Create TRIGGER AgeEntry_update
    Before UPDATE
    on members for each row
    BEGIN
        set NEW.age = YEAR(CURDATE()) - YEAR(NEW.DOB);
	END; //

drop trigger AgeEntry_insert;
drop trigger AgeEntry_update;


delimiter //
CREATE TRIGGER updateMemberCount_insert
	BEFORE INSERT
    on members for each row
    BEGIN
		DECLARE tempPhoneNumber varchar(10);
		update login_users SET numberOfDependents = numberOfDependents + 1 where phonenumber = NEW.phonenumber;
	END; //


delimiter //
CREATE TRIGGER updateMemberCount_delete
	BEFORE DELETE
    on members for each row
    BEGIN
		DECLARE tempPhoneNumber varchar(10);
		update login_users SET numberOfDependents = numberOfDependents - 1 where phonenumber = old.phonenumber;
	END; //

drop trigger updateMemberCount_insert;
drop trigger updateMemberCount_delete;


DELIMITER $$
CREATE PROCEDURE insertRowsInSlotsTable()a

BEGIN
    DECLARE a INT Default 1 ;
    simple_loop: LOOP
        INSERT INTO slots (CentreID) VALUES (a);
        set a=a+1;
        IF a=2039 THEN
            LEAVE simple_loop;
        END IF;
    END LOOP simple_loop;
END $$

drop procedure insertRowsInSlotsTable;

call insertRowsInSlotsTable();


delimiter //
Create TRIGGER Centre_insert
    AFTER INSERT
    on vaccinecentres for each row
BEGIN
    INSERT into slots (CentreID) value (NEW.CentreID);
END; //

drop trigger Centre_insert;

delimiter //
Create TRIGGER Centre_beforeDelete
    BEFORE DELETE
    on vaccinecentres for each row
BEGIN
    DELETE from slots where slots.CentreID= OLD.CentreID;
END; //

drop trigger Centre_beforeDelete;

INSERT into slots (CentreID) value (default);

